TYPE="type"
ARGS="args"
RETURN="return"
EXCP="exceptions"
TARGET="target"
FUNC="func"
OBJC="objc"

class ABFile():
  def __init__(self,filename, create):
    mycontext['debug'] = False   
    self.Afn = filename+'.a'
    self.Bfn = filename+'.b'

    if create==True:
      if self.Afn not in listfiles():
        self.ABfile = openfile(filename,create)
        self.Afile = openfile(self.Afn,create)
        self.Bfile = openfile(self.Bfn,create)
        self.Afile.writeat('SE',0)
      else:
        self.ABfile = openfile(filename,create)
        self.Afile = openfile(self.Afn,create)
        self.Bfile = openfile(self.Bfn,True)
    else:
      self.ABfile = openfile(filename,create)
      self.Afile = openfile(self.Afn,create)
      self.Bfile = openfile(self.Bfn,True)


  def writeat(self,data,offset):
    beginsWith = data[0]
    endsWith = data[-1]
    if beginsWith=='S' and endsWith=='E':
      self.Bfile.writeat(data,offset)
  
  def readat(self,bytes,offset):
    if offset < len(self.Afile.readat(None,0)):
      return self.Afile.readat(bytes,offset)

  def close(self):
    backup_data=self.Bfile.readat(None,0)
    if self.Bfile.readat(None,0).startswith("S") and self.Bfile.readat(None,0).endswith("E"):
      if backup_data:
        self.Afile.writeat(backup_data,0)
        self.ABfile.writeat(backup_data,0)
    self.Afile.close()
    self.Bfile.close()
    self.ABfile.close()
    removefile(self.Bfn)
    
def ABopenfile(filename, create):
  return ABFile(filename, create)

sec_file_def = {"obj-type":ABFile,
                "name":"ABFile",
                "writeat":{"type":"func","args":(str,(int,int)),"exceptions":Exception,"return":(int,type(None)),"target":ABFile.writeat},
                "readat":{"type":"func","args":((int,int,type(None)),(int,int)),"exceptions":Exception,"return":str,"target":ABFile.readat},
                "close":{"type":"func","args":None,"exceptions":Exception,"return":(bool,type(None)),"target":ABFile.close}
           }

CHILD_CONTEXT_DEF["ABopenfile"] = {TYPE:OBJC,ARGS:(str,bool),EXCP:Exception,RETURN:sec_file_def,TARGET:ABopenfile}

secure_dispatch_module()
